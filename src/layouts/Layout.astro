---
import { defaultLang } from '@/i18n/ui';
import { getLangFromUrl } from '@/i18n/utils';
import type { Head } from '@/types/Head';

interface Props {
	title: string
    head?: Head
}

const { title, head } = Astro.props;

const lang = getLangFromUrl(Astro.url) || defaultLang;
---

<!doctype html>
<html lang={lang}>
	<head>
        <script>
            import { setLang } from "@/i18n/store";
            import { defaultLang, type Language } from "@/i18n/ui";
            import { getLangFromUrl } from "@/i18n/utils";

            const currentLang: Language = getLangFromUrl(new URL(window.location.href)) || defaultLang;
            setLang(currentLang || defaultLang);
        </script>

		<meta charset="UTF-8" />
        <meta name="author" content="Alexis Pelé" />
		{head?.description && <meta name="description" content={head.description} /> }
		<meta name="viewport" content="width=device-width, initial-scale=1" />
		<meta name="generator" content={Astro.generator} />
		<title>{title} — Leim Wiki</title>

        <link rel="canonical" href={Astro.url}>

        <link rel="apple-touch-icon" sizes="76x76" href="/apple-touch-icon.png">
        <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
        <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
        <link rel="manifest" href="/site.webmanifest">
        <link rel="mask-icon" href="/safari-pinned-tab.svg" color="#6595b4">
        <meta name="msapplication-TileColor" content="#00aba9">
        <meta name="theme-color" content="#a9d1eb">

        <meta property="og:title" content={title} />
        <meta property="og:type" content="website" />
        <meta property="og:url" content={Astro.url} />
        {head?.image && <meta property="og:image" content={head.image} />}

        {head?.description && <meta name="twitter:description" content={head.description} /> }
        {head?.image && <meta property="twitter:image" content={head.image} />}

        <link rel="stylesheet" href="/leaflet/leaflet.css" rel="preload" />
        <script is:inline src="/leaflet/leaflet.js" />

        <script is:inline type="text/javascript" src="/js/leaflet-zoomify.min.js"></script>

        <link rel="stylesheet" href="/leaflet-measure/leaflet-measure.css" rel="preload" />
        <script is:inline type="text/javascript" src="/js/leaflet-measure.min.js"></script>
	</head>
	<body>
        <script is:inline>
            let initialTheme = localStorage.getItem("theme");
            const darkModeMq = window.matchMedia("(prefers-color-scheme: dark)");
    
            // Initial paint from localstorage
            switch (initialTheme) {
                case "light":
                    enableLightTheme();
                break;
                case "system":
                    resetTheme();
                break;
                case "dark":
                default:
                    enableDarkTheme();
                break;
            }
    
            // Enables dark theme and updates preferences
            function enableDarkTheme() {
                document.documentElement.classList.add('dark');
                document.documentElement.classList.remove('light');
                localStorage.setItem("theme", "dark");
            }
    
            // Enables light theme and updates preferences
            function enableLightTheme() {
                document.documentElement.classList.add('light');
                document.documentElement.classList.remove('dark');
                localStorage.setItem("theme", "light");
            }
    
            // Reset theme to OS values
            function resetTheme() {
                const prefersDark = darkModeMq.matches;
    
                if (prefersDark) {
                    document.documentElement.classList.add('dark');
                    document.documentElement.classList.remove('light');
                } else {
                    document.documentElement.classList.add('light');
                    document.documentElement.classList.remove('dark');
                }
    
                localStorage.setItem("theme", "system");
            }
        </script>

		<slot />
	</body>
</html>

<style lang="scss" is:global>
    @use '../assets/scss/theme.scss';
</style>
